name: CI

on:
  push:
    branches:
      - main
      - testing
  pull_request:
    branches:
      - main
      - testing

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install
        env:
          CI: true

      - name: Run ESLint
        run: pnpm lint

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install
        env:
          CI: true

      - name: Build project
        run: pnpm build

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install
        env:
          CI: true

      - name: Wait for PostgreSQL to start
        run: |
          until pg_isready --host=localhost --port=5432 --username=postgres; do
            echo "Waiting for PostgreSQL to start..."
            sleep 5
          done

      - name: Apply Prisma migrations
        run: pnpm prisma migrate deploy

      - name: Run tests
        run: pnpm test
